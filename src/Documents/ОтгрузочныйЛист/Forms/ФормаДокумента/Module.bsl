 #Область ОписаниеПеременных
 
 &НаКлиенте
Перем Компонент;
 
 #КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Компонент = РаботаСКомпонентомСканераШтрихкодов.ПодключитьКомпонент();
	Если Компонент <> Неопределено Тогда 
		
		Компонент.StartGetScan();           
	КонецЕсли;	
	
	Элементы.КартинкаЧО01ВвестиШтрихкод.Видимость = (Компонент = Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)                 
	
	Если Событие = "BarcodeDecodeData" И ВводДоступен() Тогда 
		
		//Если СтрДлина(Данные) = 13 Тогда 
		ОбработатьВводШтрихкодаНаКлиенте(Данные)	
			
		//КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Компонент = Неопределено;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КартинкаЧО01ВвестиШтрихкодНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВводаШтрихкода", ЭтотОбъект);
	Подсказка = "Введите штрихкод";	
	
	ПоказатьВводСтроки(ОписаниеОповещения, "", Подсказка, 32);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСборочныеЛисты

&НаКлиенте
Процедура СборочныеЛистыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СборочныеЛистыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьПлановыеДанные(Команда)
	
	Режим = РежимДиалогаВопрос.ДаНет;

	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОбновленияУчетныхДанных", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Вы уверены, что хотите обновить учетные данные?';"), Режим, 0);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСборку(Команда)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение, "Завершить сборку заказа?", Режим, 0);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВводШтрихкодаНаКлиенте(Штрихкод)
	
	Если Штрихкод = "9999999999994" Тогда //Закрытие сборочного листа
		
		ЗакрытьОтгрузочныйЛистНаКлиенте();
	Иначе
		
		Если Не ОбработатьСчитанныйШтрихкодНаСервере(Штрихкод) Тогда 
			
			Сигнал();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОбработатьСчитанныйШтрихкодНаСервере(Штрихкод)
	
	Если НЕ ЗначениеЗаполнено(Объект.НачалоОтгрузки) Тогда 
		
		Объект.НачалоОтгрузки = ТекущаяДатаСеанса();
	КонецЕсли;
	
	НайденныеСтроки 		= Объект.СборочныеЛисты.НайтиСтроки(Новый Структура("Штрихкод", Штрихкод));
	Если НайденныеСтроки.Количество() > 0 Тогда  
					
		НайденаяСтрока 		= НайденныеСтроки[0];		
		НайденаяСтрока.ВремяОтметки = ТекущаяДатаСеанса();
	Иначе		
		Возврат Ложь;
	КонецЕсли;		
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ЗакрытьОтгрузочныйЛистНаКлиенте()
	
	
	Объект.ОкончаниеОтгрузки = ТекущаяДата();
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));    
	
	Если ОтправитьОтгрузочныйЛистНаСервере() Тогда 
		
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
 		Закрыть();                
	Иначе
		
		Сообщить("Ошибка отправки отгрузочного листа");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОтправитьОтгрузочныйЛистНаСервере() 
	
	Возврат ОбменДанными.ОтправитьДанныеОтгрузочногоЛиста(Объект.Ссылка);
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
	КонецЕсли;
	
	ЗакрытьОтгрузочныйЛистНаКлиенте();
КонецПроцедуры

&НаСервере
Процедура ОбновитьУчетныеДанныеНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Штрихкод = СтрЗаменить(Объект.ЗаказПокупателя, "-", "");	
	ДанныеОтгрузочногоЛиста = ОбменДанными.ПолучитьДанныеОтгрузочногоЛиста(Штрихкод);
	
	Если ДанныеОтгрузочногоЛиста.Свойство("number") Тогда 
		
		Объект.Номер = ДанныеОтгрузочногоЛиста.number;		
		Объект.Дата = XMLЗначение(Тип("Дата"), ДанныеОтгрузочногоЛиста.date);
		Объект.Штрихкод =  ДанныеОтгрузочногоЛиста.barcode;
		Объект.ЗаказПокупателя =  ДанныеОтгрузочногоЛиста.order_id;
		
		Объект.СборочныеЛисты.Очистить();
		Для Каждого item Из ДанныеОтгрузочногоЛиста.items Цикл 
			
			НоваяСтрока = Объект.СборочныеЛисты.Добавить();
			НоваяСтрока.Штрихкод = item.barcode;
			НоваяСтрока.Номер = item.number;
			НоваяСтрока.Идентификатор = item.id;
		КонецЦикла;                                 
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура ПослеЗакрытияВопросаОбновленияУчетныхДанных(Результат, Параметры) Экспорт
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    ОбновитьУчетныеДанныеНаСервере();
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись));
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаШтрихкода(Штрихкод, Параметры) Экспорт
    Если НЕ Штрихкод = Неопределено Тогда
        
		ОбработатьВводШтрихкодаНаКлиенте(Штрихкод);
    КонецЕсли;
КонецПроцедуры

#КонецОбласти

